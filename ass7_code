//============================================================================
// Name        : kruskal.cpp
// Author      : Vivek
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <bits/stdc++.h>
using namespace std;



class edge
{
public:
	int source;
	int destination;
	int weight;
};

bool compare(edge E1,edge E2)
{
	return E1.weight<E2.weight;
}

int findparent(int v,int *parent)
{
	if(parent[v] == v)
	{
		return v;
	}
	return findparent(parent[v],parent);
}

void kruskal(edge *input,int n,int E,int *min_weight)
{
	//sort the weights in input array
	sort(input,input+E,compare);

	edge *output = new edge[n-1];
	int *parent = new int[n];
	for(int i=0;i<n;i++)
	{
		parent[i]=i;
	}
	int count=0;
	int i=0;
	while(count!=n-1)
	{
		edge currentEdge = input[i];
		//Check for cycle
		int sourceparent = findparent(currentEdge.source,parent);
		int destparent = findparent(currentEdge.destination,parent);
		if(sourceparent!=destparent)
		{
			output[count]=currentEdge;
			count++;
			parent[sourceparent]=destparent;
		}
		i++;

	}
	cout<<"Source"<<"   "<<"Destination"<<"   "<<"Weight"<<" "<<endl;

	for(int i=0;i<n-1;i++)
	{
		if(output[i].source<output[i].destination)
		{
		cout<<output[i].source<<"         "<<output[i].destination<<"                "<<output[i].weight<<endl;
		}
		else
		{
			cout<<output[i].destination<<"         "<<output[i].source<<"                "<<output[i].weight<<endl;
		}
		*min_weight=*min_weight+output[i].weight;
	}
}

int main()
{
	int n=0,E=0,min_weight=0;
	cout<<"ENTER NUMBER OF VERTICES"<<endl;
	cin>>n;
	cout<<"ENTER NUMBER OF EDGES"<<endl;
	cin>>E;
	edge *input =new edge[E];
	cout<<"ENTER INPUT IN FORMAT(' SOURCE DESTINATION WEIGHT')"<<endl;
	for(int i=0;i<E;i++)
	{
		int s,d,w;
		cin>>s>>d>>w;
		input[i].source=s;
		input[i].destination=d;
		input[i].weight=w;
	}
	cout<<"THE MINIMUM SPANNING TREE IS:"<<endl<<endl;
	kruskal(input,n,E,&min_weight);
	cout<<endl<<endl;
	cout<<"MINIMUM WEIGHT OF THE SPANNING TREE IS:"<<min_weight<<endl;
	return 0;
}

